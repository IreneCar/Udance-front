{"version":3,"sources":["context/auth.context.js","components/Navbar.js","pages/HomePage.js","services/service.js","services/project.services.js","components/AddProject.js","components/ProjectCard.js","pages/ProjectListPage.js","services/tasks.services.js","components/AddTask.js","components/TaskCard.js","pages/ProjectDetailsPage.js","services/auth.services.js","pages/SignupPage.js","pages/LoginPage.js","components/PrivateRoute.js","components/AnonRoute.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","process","REACT_APP_API_URL","AuthContext","React","createContext","AuthProviderWrapper","props","useState","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","user","setUser","verifyStoredToken","storedToken","localStorage","getItem","axios","get","headers","Authorization","then","response","data","catch","error","useEffect","Provider","value","logInUser","token","setItem","logOutUser","removeItem","children","Navbar","useContext","to","onClick","name","HomePage","service","create","baseURL","interceptors","request","use","config","URL","getProjectDetailsService","id","addNewProjectService","newProject","post","AddProject","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","refreshProjects","console","log","className","onSubmit","type","onChange","target","ProjectCard","_id","style","maxWidth","ProjectListPage","projects","setProjects","loading","setLoading","getAllProjects","map","project","AddTask","projectId","requestBody","newTask","refreshProject","Spinner","animation","size","TaskCard","inputTitle","setInputTitle","inputDescription","setInputDescription","isDeleted","setIsDeleted","idTask","handleSubmitTask","updatedTask","put","handleDeleteTask","delete","ProjectDetailsPage","setProject","useParams","getProject","tasks","task","SignupPage","email","setEmail","password","setPassword","setName","navigate","useNavigate","undefined","errorMessage","setErrorMessage","handleSignupSubmit","status","LoginPage","handleLoginSubmit","authToken","errorDescription","message","PrivateRoute","replace","AnonRoute","App","exact","path","component","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d26c3a7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst AuthContext = React.createContext();\n\nfunction AuthProviderWrapper(props) {\n\tconst [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ user, setUser ] = useState(null);\n\t// const [ error, setError ] = useState();\n\n\tconst verifyStoredToken = () => {\n\t\t// Get the stored token from the localStorage\n\t\tconst storedToken = localStorage.getItem('authToken');\n\n\t\t// If the token exists in the localStorage\n\t\tif (storedToken) {\n\t\t\t// We must send the JWT token in the request's \"Authorization\" Headers\n\t\t\taxios\n\t\t\t\t.get(`${API_URL}/auth/verify`, { headers: { Authorization: `Bearer ${storedToken}` } })\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// If the server verifies that JWT token is valid  ✅\n\t\t\t\t\tconst user = response.data;\n\t\t\t\t\tsetUser(user);\n\t\t\t\t\tsetIsLoggedIn(true);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// If the server sends an error response (invalid token) ❌\n\t\t\t\t\tsetIsLoggedIn(false);\n\t\t\t\t\tsetUser(null);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t});\n\t\t} else {\n\t\t\t// If the token is not available\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tconst logInUser = (token) => {\n\t\tlocalStorage.setItem('authToken', token);\n\t\tverifyStoredToken();\n\n\t\t/* \n      After saving the token in the localStorage we call the\n      function `verifyStoredToken` which sends a new request to the\n      server to verify the token. Upon receiving the response the function \n      `verifyStoredToken` updates the state variables `isLoggedIn`, `user` and `isLoading`\n    */\n\t};\n\n\tconst logOutUser = () => {\n\t\t// Upon logout, remove the token from the localStorage\n\t\tlocalStorage.removeItem('authToken');\n\n\t\t// Update the state variables\n\t\tsetIsLoggedIn(false);\n\t\tsetUser(null);\n\t};\n\n\tuseEffect(() => {\n\t\tverifyStoredToken();\n\t}, []);\n\n\t// useEffect(\n\t// \t() => {\n\t// \t\tif (error) {\n\t// \t\t\talert(error);\n\t// \t\t}\n\t// \t},\n\t// \t[ error ]\n\t// );\n\n\treturn (\n\t\t<AuthContext.Provider value={{ isLoggedIn, isLoading, user, logInUser, logOutUser }}>\n\t\t\t{props.children}\n\t\t</AuthContext.Provider>\n\t);\n}\n\nexport { AuthProviderWrapper, AuthContext };\n","import { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";                       // <== IMPORT \nimport { AuthContext } from \"./../context/auth.context\";  // <== IMPORT\n\nfunction Navbar() {\n  // Subscribe to the AuthContext to gain access to\n  // the values from AuthContext.Provider `value` prop\n  const { isLoggedIn, user, logOutUser } = useContext(AuthContext);\n\n  return (\n    <nav>\n      <Link to=\"/\">\n        <button>Home</button>\n      </Link>\n-\n      {isLoggedIn\n        ? (<>\n            <Link to=\"/projects\">\n              <button>Projects</button>\n            </Link>\n            <button onClick={logOutUser}>Logout</button>\n            <span>{user.name}</span>\n          </>)\n        : \n        (<>\n          <Link to=\"/signup\"> <button>Signup</button> </Link>\n          <Link to=\"/login\"> <button>Login</button> </Link>\n        </>)\n      }\n    </nav>\n  );\n}\n\nexport default Navbar;","function HomePage() {\n  return (\n    <div>\n      <h1>Home Page</h1>\n    </div>\n  );\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst service = axios.create({\n\tbaseURL: `${process.env.REACT_APP_API_URL}`\n});\n\n//enviar el token en cada request que haga el usuario para checkear\nservice.interceptors.request.use((config) => {\n\t//buscar el token en el localStorage\n\tconst storedToken = localStorage.getItem('authToken');\n\t//si el token existe lo añadimos a los headers del request //pasar la autorizacion como string  indicando el tipo de autenticacion. OJO CON LOS ESPACIOS!!\n\tconfig.headers = storedToken && { Authorization: `Bearer ${storedToken}` };\n\n\treturn config;\n});\n\nexport default service;\n","import service from './service';\n\nconst URL = '/projects';\n\nconst getAllProjectsService = () => {\n\treturn service.get(`${URL}/`);\n};\nconst getProjectDetailsService = (id) => {\n\treturn service.get(`${URL}/${id}`);\n};\n\nconst addNewProjectService = (newProject) => {\n\treturn service.post(`${URL}/`, newProject);\n};\n\nexport { getAllProjectsService, addNewProjectService, getProjectDetailsService };\n","import { useState } from 'react';\nimport { addNewProjectService } from '../services/project.services.js';\n\nfunction AddProject(props) {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ description, setDescription ] = useState('');\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst newProject = { title, description };\n\n\t\t// Send the token through the request \"Authorization\" Headers\n\t\ttry {\n\t\t\tawait addNewProjectService(newProject);\n\t\t\tsetTitle('');\n\t\t\tsetDescription('');\n\t\t\tprops.refreshProjects();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"AddProject\">\n\t\t\t<h3>Add Project</h3>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label>Title:</label>\n\t\t\t\t<input type=\"text\" name=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n\n\t\t\t\t<label>Description:</label>\n\t\t\t\t<textarea\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default AddProject;\n","import { Link } from 'react-router-dom';\n\n// We are deconstructing props object directly in the parentheses of the function\nfunction ProjectCard({ title, description, _id }) {\n\treturn (\n\t\t<div className=\"ProjectCard card\">\n\t\t\t<Link to={`/projects/${_id}`}>\n\t\t\t\t<h3>{title}</h3>\n\t\t\t</Link>\n\t\t\t<p>id: {_id}</p>\n\t\t\t<p style={{ maxWidth: '400px' }}>{description} </p>\n\t\t</div>\n\t);\n}\n\nexport default ProjectCard;\n","import { useState, useEffect } from 'react';\nimport AddProject from './../components/AddProject';\nimport ProjectCard from './../components/ProjectCard';\nimport { getAllProjectsService } from '../services/project.services';\n\nfunction ProjectListPage() {\n\tconst [ projects, setProjects ] = useState([]);\n\tconst [ loading, setLoading ] = useState(true);\n\n\tconst getAllProjects = async () => {\n\t\t// Send the token through the request \"Authorization\" Headers\n\t\ttry {\n\t\t\tconst response = await getAllProjectsService();\n\t\t\tsetProjects(response.data);\n\t\t\tsetLoading(false);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\t// We set this effect will run only once, after the initial render\n\t// by setting the empty dependency array - []\n\tuseEffect(() => {\n\t\tgetAllProjects();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"ProjectListPage\">\n\t\t\t<AddProject refreshProjects={getAllProjects} />\n\n\t\t\t{loading && <div>Loading...</div>}\n\t\t\t { !loading && projects?.map((project) => <ProjectCard key={project._id} {...project} />  )}  \n\t\t</div>\n\t);\n}\n\nexport default ProjectListPage;\n","import service from './service';\n\nconst URL = '/tasks';\n\n//add new task\nconst addNewTaskService = (newTask) => {\n\treturn service.post(`${URL}/`, newTask);\n};\n\n//delete task\nconst deleteTaskService = (id) => {\n\treturn service.delete(`${URL}/${id}`);\n};\n\n//update task\nconst updateTaskService = (id, updatedTask) => {\n\treturn service.put(`${URL}/${id}`, updatedTask);\n};\n\nexport { addNewTaskService, deleteTaskService, updateTaskService };\n","import { useState } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { addNewTaskService } from '../services/tasks.services';\n\n\nfunction AddTask(props) {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ description, setDescription ] = useState('');\n\tconst [ isLoading, setIsLoading ] = useState(false);\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\t// We need the project id when creating the new task\n\t\tconst { projectId } = props;\n\t\t// Create an object representing the body of the POST request\n\t\tconst requestBody = { title, description, projectId };\n\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tawait addNewTaskService(requestBody);\n\t\t\t// Reset the state to clear the inputs\n\t\t\tsetTitle('');\n\t\t\tsetDescription('');\n\t\t\tsetIsLoading(false);\n\t\t\tprops.refreshProject();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"AddTask\">\n\t\t\t<h3>Add New Task</h3>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label>Title:</label>\n\t\t\t\t<input type=\"text\" name=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n\n\t\t\t\t<label>Description:</label>\n\t\t\t\t<textarea\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\">Add Task</button>\n\t\t\t\t{isLoading && <Spinner animation=\"grow\" size=\"sm\" />}\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default AddTask;\n","import React, { useState } from 'react';\n\nimport { updateTaskService, deleteTaskService } from '../services/tasks.services';\n\nfunction TaskCard({ title, description, _id }) {\n\tconst [ inputTitle, setInputTitle ] = useState(title);\n\tconst [ inputDescription, setInputDescription ] = useState(description);\n\tconst [ isDeleted, setIsDeleted ] = useState(false);\n\tconst idTask = _id;\n\n\tconst handleSubmitTask = async (e) => {\n\t\ttry {\n\t\t\tconst requestBody = { inputTitle, inputDescription };\n\n\t\t\tawait updateTaskService(idTask, requestBody);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tconst handleDeleteTask = async (e) => {\n\t\ttry {\n\t\t\tawait deleteTaskService(idTask);\n\t\t\tsetIsDeleted(true);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{!isDeleted && (\n\t\t\t\t<div className=\"TaskCard card\">\n\t\t\t\t\t<p>Task</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={inputTitle}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetInputTitle(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={inputDescription}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetInputDescription(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={handleSubmitTask}>Modificar</button>\n\t\t\t\t\t<button onClick={handleDeleteTask}>Eliminar</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default TaskCard;\n","import { useState, useEffect } from 'react';\nimport { getProjectDetailsService } from '../services/project.services';\n\nimport { Link, useParams } from 'react-router-dom';\nimport AddTask from '../components/AddTask';\nimport TaskCard from '../components/TaskCard';\n\nfunction ProjectDetailsPage(props) {\n\tconst [ project, setProject ] = useState(null);\n\tconst { id } = useParams();\n\tconst projectId = id;\n\n\tconst getProject = async () => {\n\t\tlocalStorage.getItem('authToken');\n\t\ttry {\n\t\t\tconst response = await getProjectDetailsService(id);\n\t\t\tsetProject(response.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetProject();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<div className=\"ProjectDetails\">\n\t\t\t{project && (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Project: {project.title}</h1>\n\t\t\t\t\t<p>Description: {project.description}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<AddTask refreshProject={getProject} projectId={projectId} />\n\n\t\t\t{project &&\n\t\t\t\tproject.tasks.map((task) => {\n\t\t\t\t\treturn <TaskCard key={task._id} {...task} />;\n\t\t\t\t})}\n\n\t\t\t<Link to=\"/projects\">\n\t\t\t\t<button>Back to projects</button>\n\t\t\t</Link>\n\t\t</div>\n\t);\n}\n\nexport default ProjectDetailsPage;\n","import service from './service';\n\nconst URL = '/auth';\n\nconst signupService = (user) => {\n\treturn service.post(`${URL}/signup`, user);\n};\n\nconst loginService = (user) => {\n\treturn service.post(`${URL}/login`, user);\n};\n\nconst verifyService = () => {\n\treturn service.get(`${URL}/verify`);\n};\n\nexport { signupService, loginService, verifyService };\n","import { useState } from 'react';\nimport { Link,useNavigate } from 'react-router-dom';\nimport { signupService } from '../services/auth.services';\n\n\nfunction SignupPage(props) {\n\tconst [ email, setEmail ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\tconst [ name, setName ] = useState('');\n  const navigate = useNavigate();\n\tconst [ errorMessage, setErrorMessage ] = useState(undefined);\n\n\tconst handleEmail = (e) => setEmail(e.target.value);\n\tconst handlePassword = (e) => setPassword(e.target.value);\n\tconst handleName = (e) => setName(e.target.value);\n\n\tconst handleSignupSubmit = async (e) => {\n\t\te.preventDefault();\n\t\t// Create an object representing the request body\n\t\tconst requestBody = { email, password, name };\n    try{\n      await signupService(requestBody);\n      navigate(\"/login\");\n    }catch(err){\n      if(err.response?.status === 400){\n        setErrorMessage(err.response.data.errorMessage);\n        console.log(errorMessage);\n      }\n    }\n  };\n\n\treturn (\n\t\t<div className=\"SignupPage\">\n\t\t\t<h1>Sign Up</h1>\n\n\t\t\t<form onSubmit={handleSignupSubmit}>\n\t\t\t\t<label>Email:</label>\n\t\t\t\t<input type=\"text\" name=\"email\" value={email} onChange={handleEmail} />\n\n\t\t\t\t<label>Password:</label>\n\t\t\t\t<input type=\"password\" name=\"password\" value={password} onChange={handlePassword} />\n\n\t\t\t\t<label>Name:</label>\n\t\t\t\t<input type=\"text\" name=\"name\" value={name} onChange={handleName} />\n\n\t\t\t\t<button type=\"submit\">Sign Up</button>\n\t\t\t</form>\n\n\t\t\t{errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n\t\t\t<p>Already have account?</p>\n\t\t\t<Link to={'/login'}> Login</Link>\n\t\t</div>\n\t);\n}\n\nexport default SignupPage;\n","import { useState, useContext } from 'react';\n// import axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from './../context/auth.context';\nimport { loginService } from '../services/auth.services';\n\nfunction LoginPage(props) {\n\tconst [ email, setEmail ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\tconst [ errorMessage, setErrorMessage ] = useState(undefined);\n\tconst navigate = useNavigate();\n\tconst { logInUser } = useContext(AuthContext);\n\n\tconst handleEmail = (e) => setEmail(e.target.value);\n\tconst handlePassword = (e) => setPassword(e.target.value);\n\n\tconst handleLoginSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst requestBody = { email, password };\n\n\t\ttry {\n\t\t\tconst response = await loginService(requestBody);\n\t\t\t\n\t\t\tconst token = response.data.authToken;\n\t\t\tlogInUser(token);\n\t\t\tnavigate('/');\n\t\t} catch (err) {\n\t\t\tconst errorDescription = err?.response?.data?.message;\n\t\t\tsetErrorMessage(errorDescription);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"LoginPage\">\n\t\t\t<h1>Login</h1>\n\n\t\t\t<form onSubmit={handleLoginSubmit}>\n\t\t\t\t<label>Email:</label>\n\t\t\t\t<input type=\"text\" name=\"email\" value={email} onChange={handleEmail} />\n\n\t\t\t\t<label>Password:</label>\n\t\t\t\t<input type=\"password\" name=\"password\" value={password} onChange={handlePassword} />\n\n\t\t\t\t<button type=\"submit\">Login</button>\n\t\t\t</form>\n\t\t\t{errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n\t\t\t<p>Don't have an account yet?</p>\n\t\t\t<Link to={'/signup'}> Sign Up</Link>\n\t\t</div>\n\t);\n}\n\nexport default LoginPage;\n","import { useContext } from 'react';\nimport { AuthContext } from './../context/auth.context';\nimport { Navigate } from 'react-router-dom';\n\nfunction PrivateRoute(props) {\n\tconst { isLoggedIn, isLoading } = useContext(AuthContext);\n\n\t// If the authentication is still loading ⏳\n\tif (isLoading) return <p>Loading ...</p>;\n\n\t// If the user is not logged in ❌\n\tif (!isLoggedIn) return <Navigate to=\"/login\" replace />;\n\n\t// If the user is logged in ✅\n\treturn props.children;\n}\n\nexport default PrivateRoute;\n","import { useContext } from 'react';\nimport { AuthContext } from './../context/auth.context';\nimport { Navigate } from 'react-router-dom';\n\nfunction AnonRoute(props) {\n\tconst { isLoggedIn, isLoading } = useContext(AuthContext);\n\n\t// If the authentication is still loading ⏳\n\tif (isLoading) return <p>Loading ...</p>;\n\n\t// If the user is already logged in, redirect him to home page\n\tif (isLoggedIn) return <Navigate to=\"/\" replace />;\n\n\t// If the user is not logged in yet, allow him to see the page\n\treturn props.children;\n}\n\nexport default AnonRoute;\n","import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport HomePage from './pages/HomePage';\nimport ProjectListPage from './pages/ProjectListPage';\nimport ProjectDetailsPage from './pages/ProjectDetailsPage';\n\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport PrivateRoute from './components/PrivateRoute'; \nimport AnonRoute from './components/AnonRoute'; \n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar />\n\n\t\t\t<Routes>\n\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/projects\"\n\t\t\t\t\telement={\n\t\t\t\t\t\t<PrivateRoute>\n\t\t\t\t\t\t\t<ProjectListPage />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/projects/:id\"\n\t\t\t\t\telement={\n\t\t\t\t\t\t<PrivateRoute>\n\t\t\t\t\t\t\t<ProjectDetailsPage />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/signup\"\n\t\t\t\t\telement={\n\t\t\t\t\t\t<AnonRoute>\n\t\t\t\t\t\t\t<SignupPage />\n\t\t\t\t\t\t</AnonRoute>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\telement={\n\t\t\t\t\t\t<AnonRoute>\n\t\t\t\t\t\t\t<LoginPage />\n\t\t\t\t\t\t</AnonRoute>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Routes>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { AuthProviderWrapper } from \"./context/auth.context\"; // <== IMPORT\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProviderWrapper>\n        <App />\n      </AuthProviderWrapper>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();"],"sourceRoot":""}